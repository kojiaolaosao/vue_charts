{"version":3,"file":"js/542.5efe275d.js","mappings":"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","sources":["webpack://vue_echarts/./src/views/ScoreTableView.vue","webpack://vue_echarts/./src/views/ScoreTableView.vue?3e1a"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>{{ recordInfo.title }}</h1>\r\n        <div>\r\n            <div>{{ recordInfo.info }}</div>\r\n            <span style=\"font-size: small;color: #b4b4b4;\">{{ recordInfo.createdTime }}</span>\r\n        </div>\r\n        <div>\r\n            <el-table :data=\"scores\" show-summary :summary-method=\"getSummaries\">\r\n                <el-table-column type=\"index\" width=\"100\"></el-table-column>\r\n                <el-table-column sortable v-for=\"it in colItems\" :prop=\"it.prop\" :label=\"it.label\"/>\r\n            </el-table>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"@/axios\";\r\n\r\nexport default {\r\n    name: \"ScoreTableView\",\r\n    data() {\r\n        return {\r\n            recordId: this.$route.query.id,\r\n            recordInfo: {},\r\n            scores: [],\r\n            colItems: [\r\n                {label:'姓名',prop:'name'},\r\n                {label:'总分',prop:'totalScore'},\r\n                {label:'语文',prop:'languages'},\r\n                {label:'数学',prop:'maths'},\r\n                {label:'英语',prop:'englishes'},\r\n                {label:'附加',prop:'addition'},\r\n                {label:'物理',prop:'physicals'},\r\n                {label:'历史',prop:'history'},\r\n                {label:'地理',prop:'geography'},\r\n                {label:'地赋',prop:'geographyReal'},\r\n                {label:'政治',prop:'politics'},\r\n                {label:'政赋',prop:'politicsReal'},\r\n                {label:'化学',prop:'chemicals'},\r\n                {label:'化赋',prop:'chemicalsReal'},\r\n                {label:'生物',prop:'biological'},\r\n                {label:'生赋',prop:'biologicalReal'},\r\n                {label:'班级名次',prop:'classRank'},\r\n                {label:'年级排名',prop:'gradeRank'},\r\n            ],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getScoreRecords();\r\n    },\r\n    methods: {\r\n        getScoreRecords() {\r\n            axios.get('/score/getScores/' + this.$route.query.id).then(res => {\r\n                this.recordInfo = res.data.data;\r\n                this.scores = res.data.data.recordEntities;\r\n                // console.log(this.scores);\r\n                this.filterItems();\r\n            })\r\n        },\r\n        filterItems() {\r\n            let map = new Map();\r\n            for (let sk in this.scores[0]) {\r\n                map.set(sk,false);\r\n            }\r\n            this.scores.forEach(s => {\r\n                for (let sk in s) {\r\n                    if (s[sk]!==0) map.set(sk,true);\r\n                }\r\n            })\r\n            console.log(map);\r\n            this.colItems=this.colItems.filter(it => {\r\n                return map.get(it.prop);\r\n            });\r\n        },\r\n        //合计行\r\n        getSummaries(param) {\r\n            const {columns, data} = param;\r\n            const sums = [];\r\n            columns.forEach((column, index) => {\r\n                if (index === 0) {\r\n                    sums[index] = '平均分';\r\n                    return;\r\n                }\r\n                const values = data.map(item => Number(item[column.property]));\r\n                if (!values.every(value => isNaN(value)) && column.property !== 'gradeRank' && column.property !== 'classRank') {\r\n                    sums[index] = values.reduce((prev, curr) => {\r\n                        const value = Number(curr);\r\n                        if (!isNaN(value))\r\n                            return prev + curr;\r\n                        else\r\n                            return prev;\r\n                    }, 0);\r\n                    sums[index] = Math.round(sums[index] / values.length * 100) / 100;\r\n                } else {\r\n                    sums[index] = ' ';\r\n                }\r\n            });\r\n\r\n            return sums;\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./ScoreTableView.vue?vue&type=template&id=43409432\"\nimport script from \"./ScoreTableView.vue?vue&type=script&lang=js\"\nexport * from \"./ScoreTableView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\WebstormProjects\\\\vue_echarts\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["style","_createElementBlock","_createElementVNode","$data","title","info","_hoisted_1","createdTime","_createVNode","_component_el_table","data","$options","_component_el_table_column","type","width","_Fragment","it","_createBlock","sortable","prop","label","name","recordId","this","$route","query","id","recordInfo","scores","colItems","mounted","getScoreRecords","methods","axios","then","res","recordEntities","filterItems","map","Map","sk","set","forEach","s","console","log","filter","get","getSummaries","param","columns","sums","column","index","values","item","Number","property","every","value","isNaN","reduce","prev","curr","Math","round","length","__exports__","render"],"sourceRoot":""}